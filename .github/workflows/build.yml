name: morse build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: install deps
      run: sudo apt-get update && sudo apt-get install pkg-config libssl-dev clang libx11-dev libxext-dev libxft-dev libxinerama-dev libxcursor-dev libxrender-dev libxfixes-dev libpango1.0-dev libgl1-mesa-dev libglu1-mesa-dev cmake gettext librust-alsa-dev librust-udev-dev libfltk1.3-dev libfltk1.3t64 mingw-w64 gcc-multilib curl g++ pkg-config libx11-dev libasound2-dev libudev-dev librust-alsa-sys-dev libasound2-dev upx-ucl      
    - uses: actions/checkout@v4
    - name: install cargo release
      run: cargo install cargo-release
    - name: Build
      run: cargo build --verbose --release
    - name: Run tests
      run: cargo test --verbose
    - name: cargo doc
      run: cargo doc
    - name: cargo release
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
      run: cargo release --execute
    - name: zip
      run:  |
        ls -lathr /home/runner/work/rust-morse/rust-morse/target/release
        cd ${{github.workspace}}
        pwd
        zip -r morse-linux-x64.zip /home/runner/work/rust-morse/rust-morse/target/release/morse /home/runner/work/rust-morse/rust-morse/icon.png /home/runner/work/rust-morse/rust-morse/de-DE.mo /home/runner/work/rust-morse/rust-morse/en-EN.mo /home/runner/work/rust-morse/rust-morse/license.txt -j
    - name: Upload
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        gh release upload --help
        ls -lathr ~
        find . -name morse-linux-x64.zip
        ls -lathr /morse-linux-x64.zip
        ls -lathr ~/morse-linux-x64.zip
        gh release upload 0.0.1 /morse-linux-x64.zip
        pwd
