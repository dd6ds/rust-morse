
name: Build i686-unknown-linux-gnu

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-macos:
    runs-on: ubuntu-latest
    name: Build for i686-unknown-linux-gnu
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get version from Cargo.toml
        id: get_version
        run: |
         version=$(grep '^version' Cargo.toml | head -n 1 | sed 's/version = "\(.*\)"/\1/')
         echo "cargo_version=$version" >> $GITHUB_OUTPUT



      - name: Install Rust toolchain for Windows
        run: rustup target add i686-unknown-linux-gnu

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y mingw-w64 zip
          run: sudo dpkg --add-architecture i386 && sudo apt-get update && sudo apt-get install libssl-dev:i386 clang pkg-config libx11-dev libxext-dev libxft-dev libxinerama-dev libxcursor-dev libxrender-dev libxfixes-dev libpango1.0-dev libgl1-mesa-dev libglu1-mesa-dev cmake gettext librust-alsa-dev librust-udev-dev libfltk1.3-dev libfltk1.3t64 mingw-w64 gcc-multilib curl g++ pkg-config libx11-dev libasound2-dev libudev-dev librust-alsa-sys-dev libstd-rust-dev:i386 libasound2-dev upx-uc
          sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get full-upgrade -y && sudo apt-get install pkg-config libssl-dev clang libx11-dev libxext-dev libxft-dev libxinerama-dev libxcursor-dev libxrender-dev libxfixes-dev libpango1.0-dev libgl1-mesa-dev libglu1-mesa-dev cmake gettext librust-alsa-dev librust-udev-dev libfltk1.3-dev libfltk1.3t64 mingw-w64 gcc-multilib curl g++ pkg-config libx11-dev libasound2-dev libudev-dev librust-alsa-sys-dev libasound2-dev upx-ucl gcc-i686-linux-gnu g++-i686-linux-gnu doxygen texlive cmake make
           sudo dpkg --add-architecture i386
          echo "deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ $(lsb_release -c -s) main restricted universe multiverse" | sudo tee /etc/apt/sources.list
          echo "deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ $(lsb_release -c -s)-updates main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
          echo "deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ $(lsb_release -c -s)-security main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
          echo "deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ $(lsb_release -c -s)-backports main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list
          echo "deb [arch=i386] http://archive.ubuntu.com/ubuntu/ $(lsb_release -c -s) main multiverse universe" | sudo tee -a /etc/apt/sources.list
          echo "deb [arch=i386] http://security.ubuntu.com/ubuntu/ $(lsb_release -c -s)-security main multiverse universe" | sudo tee -a /etc/apt/sources.list
          echo "deb [arch=i386] http://archive.ubuntu.com/ubuntu/ $(lsb_release -c -s)-backports main multiverse universe" | sudo tee -a /etc/apt/sources.list
          echo "deb [arch=i386] http://archive.ubuntu.com/ubuntu/ $(lsb_release -c -s)-updates main multiverse universe" | sudo tee -a /etc/apt/sources.list
          sudo apt-get update -y
          sudo apt-get install -y libpango1.0-dev:i386 libx11-dev:i386 libxext-dev:i386 libxft-dev:i386 libxinerama-dev:i386 libxcursor-dev:i386 libxrender-dev:i386 libxfixes-dev:i386 libpng-dev:i386 libasound2-dev:i386
          sudo apt-get install g++-i686-linux-gnu


      - name: Build project
        run: |
          rustup up
          cargo build --release --target i686-unknown-linux-gnu

      - name: Prepare release artifacts
        run: |
          mkdir release
          cp target/i686-unknown-linux-gnu/release/morse release/morse_linux_x86_64
          upx --best release/morse_linux_x86_64
          cp *.mo release/
          cd release
          zip -r morse_windows-x86_64-v${{ steps.get_version.outputs.cargo_version }}.zip ./*
          ls -lathr



      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: i686-unknown-linux-gnu-binary
          path: target/i686-unknown-linux-gnu/release/

    
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }} 
          files: release/morse_windows-x86_64-v${{ steps.get_version.outputs.cargo_version }}.zip


