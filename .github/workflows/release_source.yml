name: Release Source Code as ZIP

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from Cargo.toml
        id: get_version
        run: |
          version=$(grep '^version' Cargo.toml | head -n 1 | sed 's/version = "\(.*\)"/\1/')
          echo "cargo_version=$version" >> $GITHUB_OUTPUT

      - name: Create git tag
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@users.noreply.github.com"
          git tag -f "v${{ steps.get_version.outputs.cargo_version }}"
          git push --force origin "v${{ steps.get_version.outputs.cargo_version }}"

      - name: Zip source code
        run: |
          zip -r "rust-morse-v${{ steps.get_version.outputs.cargo_version }}.zip" . -x '*.git*'

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v${{ steps.get_version.outputs.cargo_version }}"
          name: "Release v${{ steps.get_version.outputs.cargo_version }}"
          draft: false
          prerelease: false
          allow_update: true   # <--- THIS FIXES THE VALIDATION ERROR

      - name: Delete existing asset
        run: |
          ASSET_ID=$(gh api \
            repos/${{ github.repository }}/releases/tags/${{ github.ref_name }} \
            | jq '.assets[] | select(.name == "release.zip") | .id')
          if [ -n "$ASSET_ID" ]; then
            gh api --method DELETE \
              /repos/${{ github.repository }}/releases/assets/$ASSET_ID
          fi


      - name: Upload source code as artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "rust-morse-v${{ steps.get_version.outputs.cargo_version }}.zip"
          asset_name: "rust-morse-v${{ steps.get_version.outputs.cargo_version }}.zip"
          asset_content_type: application/zip
          allow_update: true   # <--- THIS FIXES THE VALIDATION ERROR
