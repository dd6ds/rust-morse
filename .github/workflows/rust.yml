name: morse

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Install x86 Build Dependencies
      if: ${{ matrix.target == 'i686-pc-windows-gnu' || matrix.target == 'i686-unknown-linux-gnu' }}
      run: sudo dpkg --add-architecture i386 && sudo apt-get update && sudo apt-get install libssl-dev:i386 clang pkg-config libx11-dev libxext-dev libxft-dev libxinerama-dev libxcursor-dev libxrender-dev libxfixes-dev libpango1.0-dev libgl1-mesa-dev libglu1-mesa-dev cmake gettext librust-alsa-dev librust-udev-dev libfltk1.3-dev libfltk1.3t64 mingw-w64 gcc-multilib curl g++ pkg-config libx11-dev libasound2-dev libudev-dev librust-alsa-sys-dev libstd-rust-dev:i386 libasound2-dev upx-ucl
      timeout-minutes: 60
    - name: Install x86_64 Build Dependencies
      if: ${{ matrix.target != 'i686-pc-windows-gnu' && matrix.target != 'i686-unknown-linux-gnu' }}
      run: sudo apt-get update && sudo apt-get install pkg-config libssl-dev clang libx11-dev libxext-dev libxft-dev libxinerama-dev libxcursor-dev libxrender-dev libxfixes-dev libpango1.0-dev libgl1-mesa-dev libglu1-mesa-dev cmake gettext librust-alsa-dev librust-udev-dev libfltk1.3-dev libfltk1.3t64 mingw-w64 gcc-multilib curl g++ pkg-config libx11-dev libasound2-dev libudev-dev librust-alsa-sys-dev libasound2-dev upx-ucl
      timeout-minutes: 60

    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --verbose
#    - name: Fmt
#      run: cargo fmt --check
    - name: Run tests
      run: cargo test --verbose

  release:
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.result == 'success'

    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        cargo install cargo-release

    - name: Release
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
      run: |
        echo "Releasing a version..."
        cargo release --execute

    - name: 'ðŸ“¦ Package linux x64'
      run: |
      sudo apt-get update && sudo apt-get install pkg-config libssl-dev clang libx11-dev libxext-dev libxft-dev libxinerama-dev libxcursor-dev libxrender-dev libxfixes-dev libpango1.0-dev libgl1-mesa-dev libglu1-mesa-dev cmake gettext librust-alsa-dev librust-udev-dev libfltk1.3-dev libfltk1.3t64 mingw-w64 gcc-multilib curl g++ pkg-config libx11-dev libasound2-dev libudev-dev librust-alsa-sys-dev libasound2-dev upx-ucl
          cd ${{github.workspace}}
          upx --best target/release/morse
          zip -r morse-linux-x64.zip target/release/morse icon.png de-DE.mo en-EN.mo license.txt -j
          gh release upload ${{github.event.release.tag_name}} morse-linux-x64.zip
      env:
        GITHUB_TOKEN: ${{ github.TOKEN }}
        shell: bash

    - name: Publish
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
      run: cargo publish
    

